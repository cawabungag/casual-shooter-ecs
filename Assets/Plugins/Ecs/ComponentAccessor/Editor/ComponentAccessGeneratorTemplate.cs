namespace Ecs.ComponentAccessor
{
	public static class ComponentAccessGeneratorTemplate
	{
		private const string NAMESPACE = "Ecs.ComponentAccessor";

		public static string GetProxiedImplBody(
			string ns,
			string contextName,
			string componentName
		)
			=> $@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by ComponentAccessGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

{ns}

namespace {NAMESPACE}
{{
	public sealed class {contextName}{componentName}ComponentAccess : IComponentAccess<{contextName}Entity, {componentName}Component>
	{{
		public IMatcher<{contextName}Entity> Matcher => {contextName}Matcher.{componentName};

		public bool HasComponent({contextName}Entity entity) => entity.HasComponent({contextName}ComponentsLookup.{componentName});

		public {componentName}Component Create({contextName}Entity entity) => entity.CreateComponent<{componentName}Component>({contextName}ComponentsLookup.{componentName});

		public {componentName}Component Get({contextName}Entity entity) => ({componentName}Component) entity.GetComponent({contextName}ComponentsLookup.{componentName});

		public void Remove({contextName}Entity entity) => entity.RemoveComponent({contextName}ComponentsLookup.{componentName});

		public void Replace({contextName}Entity entity, {componentName}Component component) => entity.ReplaceComponent({contextName}ComponentsLookup.{componentName}, component);
	}}
}}";
	}
}